# Generated by Django 4.0.3 on 2022-04-20 18:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basic_module_app', '0001_initial'),
        ('product_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trash', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_user_carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trash', models.BooleanField(default=False)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('order_status', models.PositiveSmallIntegerField(choices=[(0, 'Payment Process'), (1, 'Order Accept'), (2, 'Order placed'), (3, 'Processing'), (4, 'Packaging'), (5, 'On-way'), (6, 'Reached'), (7, 'Completed')], default=0)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_address_checkouts', to='basic_module_app.useraddress')),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='get_cart_checkout', to='user_app.cart')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_coupon_checkouts', to='basic_module_app.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='get_user_checkout', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CheckoutProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trash', models.BooleanField(default=False)),
                ('single_price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('offer_price', models.DecimalField(decimal_places=2, default=0, max_digits=100)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Please add 1 product to checkout.')])),
                ('checkout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_checkout_products', to='user_app.checkout')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_checkout_products', to='product_app.product')),
                ('variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_checkout_variations', to='product_app.productvariation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CheckoutPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trash', models.BooleanField(default=False)),
                ('tran_id', models.CharField(max_length=255)),
                ('val_id', models.CharField(max_length=255)),
                ('card_no', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(max_length=255)),
                ('card_issuer', models.CharField(blank=True, max_length=255, null=True)),
                ('card_brand', models.CharField(blank=True, max_length=255, null=True)),
                ('card_sub_brand', models.CharField(blank=True, max_length=255, null=True)),
                ('card_issuer_country', models.CharField(blank=True, max_length=255, null=True)),
                ('card_issuer_country_code', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_level', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_title', models.CharField(blank=True, max_length=255, null=True)),
                ('store_id', models.CharField(max_length=255)),
                ('bank_tran_id', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=100)),
                ('store_amount', models.DecimalField(decimal_places=2, default=0, max_digits=100)),
                ('card_type', models.CharField(max_length=255)),
                ('tran_date', models.DateTimeField()),
                ('currency', models.CharField(max_length=255)),
                ('currency_amount', models.DecimalField(decimal_places=2, default=0, max_digits=100)),
                ('currency_rate', models.DecimalField(decimal_places=4, default=0, max_digits=100)),
                ('base_fair', models.DecimalField(decimal_places=4, default=0, max_digits=100)),
                ('checkout', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_checkout_payment', to='user_app.checkout')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trash', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Please add 1 product to cart.')])),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_cart_products', to='user_app.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_product_cart_products', to='product_app.product')),
                ('variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_variation_cart_products', to='product_app.productvariation')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
